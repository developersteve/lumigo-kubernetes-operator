receivers:
  otlp:
    protocols:
      http:
        auth:
          authenticator: lumigoauth
        include_metadata: true # Needed by `headers_setter/lumigo`
  k8s_events:
    auth_type: serviceAccount
    # namespaces: [default, my_namespace] # Default: all

extensions:
  health_check:
  lumigoauth:
  headers_setter/lumigo:
    headers:
    # Use the same authorization header as the one accompanying
    # the request received in the receiver. It needs the
    # `include_metadata: true` parameter in the `otlp` exporter
    - key: authorization
      from_context: Authorization

exporters:
  otlphttp/lumigo:
    endpoint: https://ga-otlp.lumigo-tracer-edge.golumigo.com
    auth:
      authenticator: headers_setter/lumigo
  logging:
    loglevel: debug
    sampling_initial: 1
    sampling_thereafter: 1

# We cannot add the Batch processor, as it breaks the `headers_setter/lumigo`
# see https://github.com/open-telemetry/opentelemetry-collector/issues/4544
processors:
  k8sattributes:
    auth_type: serviceAccount
    passthrough: false
    extract:
      metadata:
        - k8s.pod.name
        - k8s.deployment.name
        - k8s.namespace.name
        - k8s.node.name
        - k8s.pod.start_time
        # TODO MORE
    pod_association:
    - from: resource_attribute
      name: k8s.pod.uid

service:
  extensions:
  - headers_setter/lumigo
  - health_check
  - lumigoauth
  pipelines:
    traces:
      receivers:
      - otlp
      processors:
      - k8sattributes
      exporters:
      - otlphttp/lumigo
      - logging
    logs:
      receivers:
      - k8s_events
      processors: []
      exporters:
      # - otlphttp/lumigo
      - logging
  telemetry:
    logs:
      level: "debug"
